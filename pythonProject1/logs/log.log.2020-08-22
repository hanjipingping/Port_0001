2020-08-20 20:06:11,959 - [test_01register.py-->line:63] - INFO: 用例注册成功-带注册名，执行通过
2020-08-20 20:06:12,317 - [test_01register.py-->line:63] - INFO: 用例成功-不带用户名，执行通过
2020-08-20 20:06:12,384 - [test_01register.py-->line:63] - INFO: 用例不输入手机号，执行通过
2020-08-20 20:06:12,439 - [test_01register.py-->line:63] - INFO: 用例手机号长度10位，执行通过
2020-08-20 20:06:12,499 - [test_01register.py-->line:63] - INFO: 用例手机号长度12位，执行通过
2020-08-20 20:06:12,540 - [test_01register.py-->line:63] - INFO: 用例手机号含有非法字符，执行通过
2020-08-20 20:06:12,669 - [test_01register.py-->line:63] - INFO: 用例已注册过的手机号，执行通过
2020-08-20 20:06:12,846 - [test_01register.py-->line:63] - INFO: 用例密码7位，执行通过
2020-08-20 20:06:12,998 - [test_01register.py-->line:63] - INFO: 用例密码17位，执行通过
2020-08-20 20:06:13,183 - [test_01register.py-->line:63] - INFO: 用例不输入密码，执行通过
2020-08-20 20:06:13,412 - [test_01register.py-->line:59] - ERROR: 用例注册名11位，执行未通过
2020-08-20 20:06:13,412 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 20:06:13,611 - [test_01register.py-->line:63] - INFO: 用例类型输入非0，1内容，执行通过
2020-08-20 20:06:13,850 - [test_01register.py-->line:59] - ERROR: 用例手机号为字符串类型，执行未通过
2020-08-20 20:06:13,850 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 20:06:13,963 - [test_02login.py-->line:54] - INFO: 用例登录成功，执行通过
2020-08-20 20:06:14,024 - [test_02login.py-->line:54] - INFO: 用例手机号为空，执行通过
2020-08-20 20:06:14,080 - [test_02login.py-->line:54] - INFO: 用例密码为空，执行通过
2020-08-20 20:06:14,217 - [test_02login.py-->line:54] - INFO: 用例手机号未注册，执行通过
2020-08-20 20:06:14,352 - [test_02login.py-->line:54] - INFO: 用例密码错误，执行通过
2020-08-20 20:06:14,400 - [test_02login.py-->line:54] - INFO: 用例手机号格式错误，执行通过
2020-08-20 20:06:14,681 - [test_03recharge.py-->line:86] - ERROR: 用例充值成功，执行未通过
2020-08-20 20:06:14,682 - [test_03recharge.py-->line:87] - ERROR: 'ok' != 'OK'
- ok
+ OK
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 82, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: 'ok' != 'OK'
- ok
+ OK

2020-08-20 20:06:14,744 - [test_03recharge.py-->line:86] - ERROR: 用例id错误，执行未通过
2020-08-20 20:06:14,744 - [test_03recharge.py-->line:87] - ERROR: 0 != 1007
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 81, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1007
2020-08-20 20:06:14,807 - [test_03recharge.py-->line:86] - ERROR: 用例不输入id，执行未通过
2020-08-20 20:06:14,807 - [test_03recharge.py-->line:87] - ERROR: 0 != 1
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 81, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1
2020-08-20 20:06:14,871 - [test_03recharge.py-->line:86] - ERROR: 用例不输入金额，执行未通过
2020-08-20 20:06:14,871 - [test_03recharge.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 81, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-20 20:06:14,928 - [test_03recharge.py-->line:86] - ERROR: 用例充值金额为负数，执行未通过
2020-08-20 20:06:14,929 - [test_03recharge.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 81, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-20 20:06:14,981 - [test_03recharge.py-->line:86] - ERROR: 用例充值金额为500001，执行未通过
2020-08-20 20:06:14,982 - [test_03recharge.py-->line:87] - ERROR: 0 != 2
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 81, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 2
2020-08-20 20:06:15,040 - [test_03recharge.py-->line:86] - ERROR: 用例充值金额非数字，执行未通过
2020-08-20 20:06:15,040 - [test_03recharge.py-->line:87] - ERROR: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 82, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '数字格式化异常' != '余额必须为数值型'
- 数字格式化异常
+ 余额必须为数值型

2020-08-20 20:06:15,095 - [test_03recharge.py-->line:86] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-20 20:06:15,095 - [test_03recharge.py-->line:87] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 82, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-20 20:17:32,997 - [test_01register.py-->line:63] - INFO: 用例注册成功-带注册名，执行通过
2020-08-20 20:17:33,377 - [test_01register.py-->line:63] - INFO: 用例成功-不带用户名，执行通过
2020-08-20 20:17:33,431 - [test_01register.py-->line:63] - INFO: 用例不输入手机号，执行通过
2020-08-20 20:17:33,477 - [test_01register.py-->line:63] - INFO: 用例手机号长度10位，执行通过
2020-08-20 20:17:33,529 - [test_01register.py-->line:63] - INFO: 用例手机号长度12位，执行通过
2020-08-20 20:17:33,581 - [test_01register.py-->line:63] - INFO: 用例手机号含有非法字符，执行通过
2020-08-20 20:17:33,709 - [test_01register.py-->line:63] - INFO: 用例已注册过的手机号，执行通过
2020-08-20 20:17:33,890 - [test_01register.py-->line:63] - INFO: 用例密码7位，执行通过
2020-08-20 20:17:34,070 - [test_01register.py-->line:63] - INFO: 用例密码17位，执行通过
2020-08-20 20:17:34,291 - [test_01register.py-->line:63] - INFO: 用例不输入密码，执行通过
2020-08-20 20:17:34,538 - [test_01register.py-->line:59] - ERROR: 用例注册名11位，执行未通过
2020-08-20 20:17:34,538 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 20:17:34,723 - [test_01register.py-->line:63] - INFO: 用例类型输入非0，1内容，执行通过
2020-08-20 20:17:34,972 - [test_01register.py-->line:59] - ERROR: 用例手机号为字符串类型，执行未通过
2020-08-20 20:17:34,972 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 20:17:35,104 - [test_02login.py-->line:54] - INFO: 用例登录成功，执行通过
2020-08-20 20:17:35,145 - [test_02login.py-->line:54] - INFO: 用例手机号为空，执行通过
2020-08-20 20:17:35,198 - [test_02login.py-->line:54] - INFO: 用例密码为空，执行通过
2020-08-20 20:17:35,319 - [test_02login.py-->line:54] - INFO: 用例手机号未注册，执行通过
2020-08-20 20:17:35,435 - [test_02login.py-->line:54] - INFO: 用例密码错误，执行通过
2020-08-20 20:17:35,498 - [test_02login.py-->line:54] - INFO: 用例手机号格式错误，执行通过
2020-08-20 20:17:35,827 - [test_03recharge.py-->line:86] - ERROR: 用例充值成功，执行未通过
2020-08-20 20:17:35,828 - [test_03recharge.py-->line:87] - ERROR: Decimal('1.00') != '1'
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 83, in test_recharge
    self.assertEqual(e_money - s_money, params["amount"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('1.00') != '1'
2020-08-20 20:17:35,994 - [test_03recharge.py-->line:86] - ERROR: 用例不输入金额，执行未通过
2020-08-20 20:17:35,995 - [test_03recharge.py-->line:87] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 81, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-20 20:17:36,052 - [test_03recharge.py-->line:86] - ERROR: 用例充值金额为负数，执行未通过
2020-08-20 20:17:36,052 - [test_03recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 82, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-20 20:17:36,104 - [test_03recharge.py-->line:86] - ERROR: 用例充值金额为500001，执行未通过
2020-08-20 20:17:36,105 - [test_03recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 82, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-20 20:17:36,211 - [test_03recharge.py-->line:86] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-20 20:17:36,211 - [test_03recharge.py-->line:87] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 82, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-20 20:20:14,526 - [test_01register.py-->line:63] - INFO: 用例注册成功-带注册名，执行通过
2020-08-20 20:20:14,876 - [test_01register.py-->line:63] - INFO: 用例成功-不带用户名，执行通过
2020-08-20 20:20:14,923 - [test_01register.py-->line:63] - INFO: 用例不输入手机号，执行通过
2020-08-20 20:20:14,980 - [test_01register.py-->line:63] - INFO: 用例手机号长度10位，执行通过
2020-08-20 20:20:15,033 - [test_01register.py-->line:63] - INFO: 用例手机号长度12位，执行通过
2020-08-20 20:20:15,099 - [test_01register.py-->line:63] - INFO: 用例手机号含有非法字符，执行通过
2020-08-20 20:20:15,217 - [test_01register.py-->line:63] - INFO: 用例已注册过的手机号，执行通过
2020-08-20 20:20:15,410 - [test_01register.py-->line:63] - INFO: 用例密码7位，执行通过
2020-08-20 20:20:15,613 - [test_01register.py-->line:63] - INFO: 用例密码17位，执行通过
2020-08-20 20:20:15,777 - [test_01register.py-->line:63] - INFO: 用例不输入密码，执行通过
2020-08-20 20:20:16,009 - [test_01register.py-->line:59] - ERROR: 用例注册名11位，执行未通过
2020-08-20 20:20:16,010 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 20:20:16,190 - [test_01register.py-->line:63] - INFO: 用例类型输入非0，1内容，执行通过
2020-08-20 20:20:16,422 - [test_01register.py-->line:59] - ERROR: 用例手机号为字符串类型，执行未通过
2020-08-20 20:20:16,423 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 20:20:16,542 - [test_02login.py-->line:54] - INFO: 用例登录成功，执行通过
2020-08-20 20:20:16,587 - [test_02login.py-->line:54] - INFO: 用例手机号为空，执行通过
2020-08-20 20:20:16,641 - [test_02login.py-->line:54] - INFO: 用例密码为空，执行通过
2020-08-20 20:20:16,755 - [test_02login.py-->line:54] - INFO: 用例手机号未注册，执行通过
2020-08-20 20:20:16,875 - [test_02login.py-->line:54] - INFO: 用例密码错误，执行通过
2020-08-20 20:20:16,917 - [test_02login.py-->line:54] - INFO: 用例手机号格式错误，执行通过
2020-08-20 20:20:17,187 - [test_03recharge.py-->line:86] - ERROR: 用例充值成功，执行未通过
2020-08-20 20:20:17,188 - [test_03recharge.py-->line:87] - ERROR: Decimal('1.00') != '1'
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 83, in test_recharge
    self.assertEqual(e_money - s_money, params["amount"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('1.00') != '1'
2020-08-20 20:20:17,343 - [test_03recharge.py-->line:86] - ERROR: 用例不输入金额，执行未通过
2020-08-20 20:20:17,343 - [test_03recharge.py-->line:87] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 81, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-20 20:20:17,403 - [test_03recharge.py-->line:86] - ERROR: 用例充值金额为负数，执行未通过
2020-08-20 20:20:17,403 - [test_03recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 82, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-20 20:20:17,467 - [test_03recharge.py-->line:86] - ERROR: 用例充值金额为500001，执行未通过
2020-08-20 20:20:17,468 - [test_03recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 82, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-20 20:20:17,529 - [test_03recharge.py-->line:86] - ERROR: 用例充值金额非数字，执行未通过
2020-08-20 20:20:17,530 - [test_03recharge.py-->line:87] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 82, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-20 20:23:30,004 - [test_01register.py-->line:63] - INFO: 用例注册成功-带注册名，执行通过
2020-08-20 20:23:30,323 - [test_01register.py-->line:63] - INFO: 用例成功-不带用户名，执行通过
2020-08-20 20:23:30,366 - [test_01register.py-->line:63] - INFO: 用例不输入手机号，执行通过
2020-08-20 20:23:30,421 - [test_01register.py-->line:63] - INFO: 用例手机号长度10位，执行通过
2020-08-20 20:23:30,472 - [test_01register.py-->line:63] - INFO: 用例手机号长度12位，执行通过
2020-08-20 20:23:30,536 - [test_01register.py-->line:63] - INFO: 用例手机号含有非法字符，执行通过
2020-08-20 20:23:30,646 - [test_01register.py-->line:63] - INFO: 用例已注册过的手机号，执行通过
2020-08-20 20:23:30,808 - [test_01register.py-->line:63] - INFO: 用例密码7位，执行通过
2020-08-20 20:23:30,977 - [test_01register.py-->line:63] - INFO: 用例密码17位，执行通过
2020-08-20 20:23:31,125 - [test_01register.py-->line:63] - INFO: 用例不输入密码，执行通过
2020-08-20 20:23:31,363 - [test_01register.py-->line:59] - ERROR: 用例注册名11位，执行未通过
2020-08-20 20:23:31,363 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 20:23:31,557 - [test_01register.py-->line:63] - INFO: 用例类型输入非0，1内容，执行通过
2020-08-20 20:23:31,777 - [test_01register.py-->line:59] - ERROR: 用例手机号为字符串类型，执行未通过
2020-08-20 20:23:31,778 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 20:23:31,898 - [test_02login.py-->line:54] - INFO: 用例登录成功，执行通过
2020-08-20 20:23:31,948 - [test_02login.py-->line:54] - INFO: 用例手机号为空，执行通过
2020-08-20 20:23:32,010 - [test_02login.py-->line:54] - INFO: 用例密码为空，执行通过
2020-08-20 20:23:32,124 - [test_02login.py-->line:54] - INFO: 用例手机号未注册，执行通过
2020-08-20 20:23:32,235 - [test_02login.py-->line:54] - INFO: 用例密码错误，执行通过
2020-08-20 20:23:32,290 - [test_02login.py-->line:54] - INFO: 用例手机号格式错误，执行通过
2020-08-20 20:23:32,568 - [test_03recharge.py-->line:86] - ERROR: 用例充值成功，执行未通过
2020-08-20 20:23:32,569 - [test_03recharge.py-->line:87] - ERROR: Decimal('1.00') != '1'
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 83, in test_recharge
    self.assertEqual(e_money - s_money, params["amount"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('1.00') != '1'
2020-08-20 20:23:32,617 - [test_03recharge.py-->line:90] - INFO: 用例id错误(不是当前用的id)，执行通过
2020-08-20 20:23:32,683 - [test_03recharge.py-->line:90] - INFO: 用例不输入id，执行通过
2020-08-20 20:23:32,738 - [test_03recharge.py-->line:86] - ERROR: 用例不输入金额，执行未通过
2020-08-20 20:23:32,739 - [test_03recharge.py-->line:87] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 78, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-20 20:23:32,791 - [test_03recharge.py-->line:86] - ERROR: 用例充值金额为负数，执行未通过
2020-08-20 20:23:32,791 - [test_03recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-20 20:23:32,847 - [test_03recharge.py-->line:86] - ERROR: 用例充值金额为500001，执行未通过
2020-08-20 20:23:32,848 - [test_03recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-20 20:23:32,908 - [test_03recharge.py-->line:86] - ERROR: 用例充值金额非数字，执行未通过
2020-08-20 20:23:32,909 - [test_03recharge.py-->line:87] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-20 20:23:32,954 - [test_03recharge.py-->line:90] - INFO: 用例充值金额小数点3位，执行通过
2020-08-20 20:29:36,073 - [test_01register.py-->line:63] - INFO: 用例注册成功-带注册名，执行通过
2020-08-20 20:29:36,426 - [test_01register.py-->line:63] - INFO: 用例成功-不带用户名，执行通过
2020-08-20 20:29:36,494 - [test_01register.py-->line:63] - INFO: 用例不输入手机号，执行通过
2020-08-20 20:29:36,558 - [test_01register.py-->line:63] - INFO: 用例手机号长度10位，执行通过
2020-08-20 20:29:36,613 - [test_01register.py-->line:63] - INFO: 用例手机号长度12位，执行通过
2020-08-20 20:29:36,667 - [test_01register.py-->line:63] - INFO: 用例手机号含有非法字符，执行通过
2020-08-20 20:29:36,779 - [test_01register.py-->line:63] - INFO: 用例已注册过的手机号，执行通过
2020-08-20 20:29:36,940 - [test_01register.py-->line:63] - INFO: 用例密码7位，执行通过
2020-08-20 20:29:37,100 - [test_01register.py-->line:63] - INFO: 用例密码17位，执行通过
2020-08-20 20:29:37,290 - [test_01register.py-->line:63] - INFO: 用例不输入密码，执行通过
2020-08-20 20:29:37,513 - [test_01register.py-->line:59] - ERROR: 用例注册名11位，执行未通过
2020-08-20 20:29:37,513 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 20:29:37,673 - [test_01register.py-->line:63] - INFO: 用例类型输入非0，1内容，执行通过
2020-08-20 20:29:37,918 - [test_01register.py-->line:59] - ERROR: 用例手机号为字符串类型，执行未通过
2020-08-20 20:29:37,918 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 20:29:38,032 - [test_02login.py-->line:54] - INFO: 用例登录成功，执行通过
2020-08-20 20:29:38,076 - [test_02login.py-->line:54] - INFO: 用例手机号为空，执行通过
2020-08-20 20:29:38,121 - [test_02login.py-->line:54] - INFO: 用例密码为空，执行通过
2020-08-20 20:29:38,234 - [test_02login.py-->line:54] - INFO: 用例手机号未注册，执行通过
2020-08-20 20:29:38,366 - [test_02login.py-->line:54] - INFO: 用例密码错误，执行通过
2020-08-20 20:29:38,430 - [test_02login.py-->line:54] - INFO: 用例手机号格式错误，执行通过
2020-08-20 20:29:38,730 - [test_03recharge.py-->line:90] - INFO: 用例充值成功，执行通过
2020-08-20 20:29:38,899 - [test_03recharge.py-->line:86] - ERROR: 用例充值成功-金额为小数，执行未通过
2020-08-20 20:29:38,899 - [test_03recharge.py-->line:87] - ERROR: Decimal('100.15') != 100.15
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 83, in test_recharge
    self.assertEqual(e_money - s_money, params["amount"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: Decimal('100.15') != 100.15
2020-08-20 20:29:38,956 - [test_03recharge.py-->line:90] - INFO: 用例id错误(不是当前用的id)，执行通过
2020-08-20 20:29:39,010 - [test_03recharge.py-->line:90] - INFO: 用例不输入id，执行通过
2020-08-20 20:29:39,065 - [test_03recharge.py-->line:86] - ERROR: 用例不输入金额，执行未通过
2020-08-20 20:29:39,065 - [test_03recharge.py-->line:87] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 78, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-20 20:29:39,117 - [test_03recharge.py-->line:86] - ERROR: 用例充值金额为负数，执行未通过
2020-08-20 20:29:39,118 - [test_03recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-20 20:29:39,180 - [test_03recharge.py-->line:86] - ERROR: 用例充值金额为500001，执行未通过
2020-08-20 20:29:39,180 - [test_03recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-20 20:29:39,241 - [test_03recharge.py-->line:86] - ERROR: 用例充值金额非数字，执行未通过
2020-08-20 20:29:39,241 - [test_03recharge.py-->line:87] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-20 20:29:39,301 - [test_03recharge.py-->line:86] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-20 20:29:39,301 - [test_03recharge.py-->line:87] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-20 20:38:00,148 - [test_01register.py-->line:63] - INFO: 用例注册成功-带注册名，执行通过
2020-08-20 20:38:00,484 - [test_01register.py-->line:63] - INFO: 用例成功-不带用户名，执行通过
2020-08-20 20:38:00,550 - [test_01register.py-->line:63] - INFO: 用例不输入手机号，执行通过
2020-08-20 20:38:00,614 - [test_01register.py-->line:63] - INFO: 用例手机号长度10位，执行通过
2020-08-20 20:38:00,675 - [test_01register.py-->line:63] - INFO: 用例手机号长度12位，执行通过
2020-08-20 20:38:00,726 - [test_01register.py-->line:63] - INFO: 用例手机号含有非法字符，执行通过
2020-08-20 20:38:00,836 - [test_01register.py-->line:63] - INFO: 用例已注册过的手机号，执行通过
2020-08-20 20:38:00,990 - [test_01register.py-->line:63] - INFO: 用例密码7位，执行通过
2020-08-20 20:38:01,149 - [test_01register.py-->line:63] - INFO: 用例密码17位，执行通过
2020-08-20 20:38:01,314 - [test_01register.py-->line:63] - INFO: 用例不输入密码，执行通过
2020-08-20 20:38:01,544 - [test_01register.py-->line:59] - ERROR: 用例注册名11位，执行未通过
2020-08-20 20:38:01,544 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 20:38:01,709 - [test_01register.py-->line:63] - INFO: 用例类型输入非0，1内容，执行通过
2020-08-20 20:38:01,958 - [test_01register.py-->line:59] - ERROR: 用例手机号为字符串类型，执行未通过
2020-08-20 20:38:01,958 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 20:38:02,091 - [test_02login.py-->line:54] - INFO: 用例登录成功，执行通过
2020-08-20 20:38:02,158 - [test_02login.py-->line:54] - INFO: 用例手机号为空，执行通过
2020-08-20 20:38:02,216 - [test_02login.py-->line:54] - INFO: 用例密码为空，执行通过
2020-08-20 20:38:02,353 - [test_02login.py-->line:54] - INFO: 用例手机号未注册，执行通过
2020-08-20 20:38:02,462 - [test_02login.py-->line:54] - INFO: 用例密码错误，执行通过
2020-08-20 20:38:02,516 - [test_02login.py-->line:54] - INFO: 用例手机号格式错误，执行通过
2020-08-20 20:38:02,811 - [test_03recharge.py-->line:90] - INFO: 用例充值成功，执行通过
2020-08-20 20:38:02,949 - [test_03recharge.py-->line:90] - INFO: 用例充值成功-金额为小数，执行通过
2020-08-20 20:38:02,992 - [test_03recharge.py-->line:90] - INFO: 用例id错误(不是当前用的id)，执行通过
2020-08-20 20:38:03,035 - [test_03recharge.py-->line:90] - INFO: 用例不输入id，执行通过
2020-08-20 20:38:03,092 - [test_03recharge.py-->line:86] - ERROR: 用例不输入金额，执行未通过
2020-08-20 20:38:03,092 - [test_03recharge.py-->line:87] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 78, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-20 20:38:03,140 - [test_03recharge.py-->line:86] - ERROR: 用例充值金额为负数，执行未通过
2020-08-20 20:38:03,140 - [test_03recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-20 20:38:03,192 - [test_03recharge.py-->line:86] - ERROR: 用例充值金额为500001，执行未通过
2020-08-20 20:38:03,192 - [test_03recharge.py-->line:87] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-20 20:38:03,240 - [test_03recharge.py-->line:86] - ERROR: 用例充值金额非数字，执行未通过
2020-08-20 20:38:03,241 - [test_03recharge.py-->line:87] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-20 20:38:03,301 - [test_03recharge.py-->line:86] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-20 20:38:03,301 - [test_03recharge.py-->line:87] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-20 20:47:14,001 - [test_01register.py-->line:63] - INFO: 用例注册成功-带注册名，执行通过
2020-08-20 20:47:14,343 - [test_01register.py-->line:63] - INFO: 用例成功-不带用户名，执行通过
2020-08-20 20:47:14,397 - [test_01register.py-->line:63] - INFO: 用例不输入手机号，执行通过
2020-08-20 20:47:14,476 - [test_01register.py-->line:63] - INFO: 用例手机号长度10位，执行通过
2020-08-20 20:47:14,531 - [test_01register.py-->line:63] - INFO: 用例手机号长度12位，执行通过
2020-08-20 20:47:14,590 - [test_01register.py-->line:63] - INFO: 用例手机号含有非法字符，执行通过
2020-08-20 20:47:23,728 - [test_01register.py-->line:63] - INFO: 用例注册成功-带注册名，执行通过
2020-08-20 20:47:24,135 - [test_01register.py-->line:63] - INFO: 用例成功-不带用户名，执行通过
2020-08-20 20:47:24,197 - [test_01register.py-->line:63] - INFO: 用例不输入手机号，执行通过
2020-08-20 20:47:24,244 - [test_01register.py-->line:63] - INFO: 用例手机号长度10位，执行通过
2020-08-20 20:47:24,316 - [test_01register.py-->line:63] - INFO: 用例手机号长度12位，执行通过
2020-08-20 20:47:24,372 - [test_01register.py-->line:63] - INFO: 用例手机号含有非法字符，执行通过
2020-08-20 20:47:24,523 - [test_01register.py-->line:63] - INFO: 用例已注册过的手机号，执行通过
2020-08-20 20:47:24,695 - [test_01register.py-->line:63] - INFO: 用例密码7位，执行通过
2020-08-20 20:47:24,845 - [test_01register.py-->line:63] - INFO: 用例密码17位，执行通过
2020-08-20 20:47:25,005 - [test_01register.py-->line:63] - INFO: 用例不输入密码，执行通过
2020-08-20 20:47:25,273 - [test_01register.py-->line:59] - ERROR: 用例注册名11位，执行未通过
2020-08-20 20:47:25,274 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 20:47:25,483 - [test_01register.py-->line:63] - INFO: 用例类型输入非0，1内容，执行通过
2020-08-20 20:47:25,796 - [test_01register.py-->line:59] - ERROR: 用例手机号为字符串类型，执行未通过
2020-08-20 20:47:25,796 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 20:47:25,961 - [test_02login.py-->line:54] - INFO: 用例登录成功，执行通过
2020-08-20 20:47:26,015 - [test_02login.py-->line:54] - INFO: 用例手机号为空，执行通过
2020-08-20 20:47:26,087 - [test_02login.py-->line:54] - INFO: 用例密码为空，执行通过
2020-08-20 20:47:26,241 - [test_02login.py-->line:54] - INFO: 用例手机号未注册，执行通过
2020-08-20 20:47:26,403 - [test_02login.py-->line:54] - INFO: 用例密码错误，执行通过
2020-08-20 20:47:26,465 - [test_02login.py-->line:54] - INFO: 用例手机号格式错误，执行通过
2020-08-20 20:47:26,770 - [test_03recharge_withdraw.py-->line:91] - INFO: 用例充值成功，执行通过
2020-08-20 20:47:26,904 - [test_03recharge_withdraw.py-->line:91] - INFO: 用例充值成功-金额为小数，执行通过
2020-08-20 20:47:26,958 - [test_03recharge_withdraw.py-->line:91] - INFO: 用例id错误(不是当前用的id)，执行通过
2020-08-20 20:47:27,019 - [test_03recharge_withdraw.py-->line:91] - INFO: 用例不输入id，执行通过
2020-08-20 20:47:27,076 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例不输入金额，执行未通过
2020-08-20 20:47:27,077 - [test_03recharge_withdraw.py-->line:88] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 78, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-20 20:47:27,137 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例充值金额为负数，执行未通过
2020-08-20 20:47:27,138 - [test_03recharge_withdraw.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-20 20:47:27,197 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例充值金额为500001，执行未通过
2020-08-20 20:47:27,197 - [test_03recharge_withdraw.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-20 20:47:27,262 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例充值金额非数字，执行未通过
2020-08-20 20:47:27,263 - [test_03recharge_withdraw.py-->line:88] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-20 20:47:27,330 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-20 20:47:27,330 - [test_03recharge_withdraw.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-20 20:47:27,641 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现成功-整数，执行通过
2020-08-20 20:47:27,772 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现成功-1位小数，执行通过
2020-08-20 20:47:27,934 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现成功-2位小数，执行通过
2020-08-20 20:47:28,068 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现成功-50万，执行通过
2020-08-20 20:47:28,134 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例会员id为空，执行通过
2020-08-20 20:47:28,186 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例会员id不存在，执行通过
2020-08-20 20:47:28,258 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例会员id为字符串，执行未通过
2020-08-20 20:47:28,258 - [test_03recharge_withdraw.py-->line:156] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 146, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 20:47:28,320 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例会员id为小数，执行通过
2020-08-20 20:47:28,374 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额为0，执行未通过
2020-08-20 20:47:28,375 - [test_03recharge_withdraw.py-->line:156] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 146, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 20:47:28,435 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额为负数，执行未通过
2020-08-20 20:47:28,435 - [test_03recharge_withdraw.py-->line:156] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 147, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-20 20:47:28,491 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额为空，执行未通过
2020-08-20 20:47:28,491 - [test_03recharge_withdraw.py-->line:156] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 147, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-08-20 20:47:28,540 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额-3位小数，执行未通过
2020-08-20 20:47:28,540 - [test_03recharge_withdraw.py-->line:156] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 147, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-20 20:47:28,591 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额-大于50万，执行未通过
2020-08-20 20:47:28,591 - [test_03recharge_withdraw.py-->line:156] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 147, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-20 20:47:28,649 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现金额-非数字，执行通过
2020-08-20 20:51:18,050 - [test_01register.py-->line:63] - INFO: 用例注册成功-带注册名，执行通过
2020-08-20 20:51:18,378 - [test_01register.py-->line:63] - INFO: 用例成功-不带用户名，执行通过
2020-08-20 20:51:18,425 - [test_01register.py-->line:63] - INFO: 用例不输入手机号，执行通过
2020-08-20 20:51:18,484 - [test_01register.py-->line:63] - INFO: 用例手机号长度10位，执行通过
2020-08-20 20:51:18,541 - [test_01register.py-->line:63] - INFO: 用例手机号长度12位，执行通过
2020-08-20 20:51:18,610 - [test_01register.py-->line:63] - INFO: 用例手机号含有非法字符，执行通过
2020-08-20 20:51:18,728 - [test_01register.py-->line:63] - INFO: 用例已注册过的手机号，执行通过
2020-08-20 20:51:18,889 - [test_01register.py-->line:63] - INFO: 用例密码7位，执行通过
2020-08-20 20:51:19,035 - [test_01register.py-->line:63] - INFO: 用例密码17位，执行通过
2020-08-20 20:51:19,189 - [test_01register.py-->line:63] - INFO: 用例不输入密码，执行通过
2020-08-20 20:51:19,417 - [test_01register.py-->line:59] - ERROR: 用例注册名11位，执行未通过
2020-08-20 20:51:19,417 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 20:51:19,572 - [test_01register.py-->line:63] - INFO: 用例类型输入非0，1内容，执行通过
2020-08-20 20:51:19,782 - [test_01register.py-->line:59] - ERROR: 用例手机号为字符串类型，执行未通过
2020-08-20 20:51:19,782 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 20:51:19,910 - [test_02login.py-->line:54] - INFO: 用例登录成功，执行通过
2020-08-20 20:51:19,953 - [test_02login.py-->line:54] - INFO: 用例手机号为空，执行通过
2020-08-20 20:51:20,029 - [test_02login.py-->line:54] - INFO: 用例密码为空，执行通过
2020-08-20 20:51:20,146 - [test_02login.py-->line:54] - INFO: 用例手机号未注册，执行通过
2020-08-20 20:51:20,241 - [test_02login.py-->line:54] - INFO: 用例密码错误，执行通过
2020-08-20 20:51:20,300 - [test_02login.py-->line:54] - INFO: 用例手机号格式错误，执行通过
2020-08-20 20:51:20,588 - [test_03recharge_withdraw.py-->line:91] - INFO: 用例充值成功，执行通过
2020-08-20 20:51:20,736 - [test_03recharge_withdraw.py-->line:91] - INFO: 用例充值成功-金额为小数，执行通过
2020-08-20 20:51:20,784 - [test_03recharge_withdraw.py-->line:91] - INFO: 用例id错误(不是当前用的id)，执行通过
2020-08-20 20:51:20,841 - [test_03recharge_withdraw.py-->line:91] - INFO: 用例不输入id，执行通过
2020-08-20 20:51:20,904 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例不输入金额，执行未通过
2020-08-20 20:51:20,904 - [test_03recharge_withdraw.py-->line:88] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 78, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-20 20:51:20,961 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例充值金额为负数，执行未通过
2020-08-20 20:51:20,961 - [test_03recharge_withdraw.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-20 20:51:21,004 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例充值金额为500001，执行未通过
2020-08-20 20:51:21,004 - [test_03recharge_withdraw.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-20 20:51:21,051 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例充值金额非数字，执行未通过
2020-08-20 20:51:21,051 - [test_03recharge_withdraw.py-->line:88] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-20 20:51:21,109 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-20 20:51:21,109 - [test_03recharge_withdraw.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-20 20:51:21,350 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现成功-整数，执行通过
2020-08-20 20:51:21,495 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现成功-1位小数，执行通过
2020-08-20 20:51:21,636 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现成功-2位小数，执行通过
2020-08-20 20:51:21,774 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现成功-50万，执行通过
2020-08-20 20:51:21,818 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例会员id为空，执行通过
2020-08-20 20:51:21,879 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例会员id不存在，执行通过
2020-08-20 20:51:21,945 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例会员id为数值，执行未通过
2020-08-20 20:51:21,947 - [test_03recharge_withdraw.py-->line:156] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 146, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 20:51:22,009 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例会员id为小数，执行通过
2020-08-20 20:51:22,062 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额为0，执行未通过
2020-08-20 20:51:22,063 - [test_03recharge_withdraw.py-->line:156] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 146, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 20:51:22,111 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额为负数，执行未通过
2020-08-20 20:51:22,111 - [test_03recharge_withdraw.py-->line:156] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 147, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-20 20:51:22,164 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额为空，执行未通过
2020-08-20 20:51:22,164 - [test_03recharge_withdraw.py-->line:156] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 147, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-08-20 20:51:22,213 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额-3位小数，执行未通过
2020-08-20 20:51:22,213 - [test_03recharge_withdraw.py-->line:156] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 147, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-20 20:51:22,272 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额-大于50万，执行未通过
2020-08-20 20:51:22,272 - [test_03recharge_withdraw.py-->line:156] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 147, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-20 20:51:22,328 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现金额-非数字，执行通过
2020-08-20 21:31:33,537 - [test_04withdraw.py-->line:78] - INFO: 用例登录成功，执行通过
2020-08-20 21:31:33,690 - [test_04withdraw.py-->line:74] - ERROR: 用例提现成功-整数，执行未通过
2020-08-20 21:31:33,690 - [test_04withdraw.py-->line:75] - ERROR:  :: -600.0 != 600
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: -600.0 != 600

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 71, in test_withdraw
    self.assertEqual(float(e_money - s_money), params["amount"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: -600.0 != 600
2020-08-20 21:31:33,838 - [test_04withdraw.py-->line:74] - ERROR: 用例提现成功-1位小数，执行未通过
2020-08-20 21:31:33,839 - [test_04withdraw.py-->line:75] - ERROR:  :: -600.1 != 600.1
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: -600.1 != 600.1

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 71, in test_withdraw
    self.assertEqual(float(e_money - s_money), params["amount"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: -600.1 != 600.1
2020-08-20 21:31:33,971 - [test_04withdraw.py-->line:74] - ERROR: 用例提现成功-2位小数，执行未通过
2020-08-20 21:31:33,972 - [test_04withdraw.py-->line:75] - ERROR:  :: -600.22 != 600.22
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: -600.22 != 600.22

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 71, in test_withdraw
    self.assertEqual(float(e_money - s_money), params["amount"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: -600.22 != 600.22
2020-08-20 21:31:34,118 - [test_04withdraw.py-->line:74] - ERROR: 用例提现成功-50万，执行未通过
2020-08-20 21:31:34,118 - [test_04withdraw.py-->line:75] - ERROR:  :: -500000.0 != 500000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: -500000.0 != 500000

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 71, in test_withdraw
    self.assertEqual(float(e_money - s_money), params["amount"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: -500000.0 != 500000
2020-08-20 21:31:34,181 - [test_04withdraw.py-->line:78] - INFO: 用例会员id为空，执行通过
2020-08-20 21:31:34,255 - [test_04withdraw.py-->line:78] - INFO: 用例会员id不存在，执行通过
2020-08-20 21:31:34,326 - [test_04withdraw.py-->line:74] - ERROR: 用例会员id为数值，执行未通过
2020-08-20 21:31:34,327 - [test_04withdraw.py-->line:75] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-08-20 21:31:34,375 - [test_04withdraw.py-->line:78] - INFO: 用例会员id为小数，执行通过
2020-08-20 21:31:34,442 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额为0，执行未通过
2020-08-20 21:31:34,443 - [test_04withdraw.py-->line:75] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-08-20 21:31:34,490 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额为负数，执行未通过
2020-08-20 21:31:34,490 - [test_04withdraw.py-->line:75] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-08-20 21:31:34,547 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额为空，执行未通过
2020-08-20 21:31:34,547 - [test_04withdraw.py-->line:75] - ERROR:  :: 金额为空 != 余额为空
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额为空 != 余额为空
2020-08-20 21:31:34,607 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额-3位小数，执行未通过
2020-08-20 21:31:34,608 - [test_04withdraw.py-->line:75] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-08-20 21:31:34,662 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额-大于50万，执行未通过
2020-08-20 21:31:34,663 - [test_04withdraw.py-->line:75] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-08-20 21:31:34,718 - [test_04withdraw.py-->line:78] - INFO: 用例提现金额-非数字，执行通过
2020-08-20 21:32:11,219 - [test_04withdraw.py-->line:78] - INFO: 用例登录成功，执行通过
2020-08-20 21:32:11,406 - [test_04withdraw.py-->line:78] - INFO: 用例提现成功-整数，执行通过
2020-08-20 21:32:11,568 - [test_04withdraw.py-->line:78] - INFO: 用例提现成功-1位小数，执行通过
2020-08-20 21:32:11,738 - [test_04withdraw.py-->line:78] - INFO: 用例提现成功-2位小数，执行通过
2020-08-20 21:32:11,904 - [test_04withdraw.py-->line:78] - INFO: 用例提现成功-50万，执行通过
2020-08-20 21:32:11,962 - [test_04withdraw.py-->line:78] - INFO: 用例会员id为空，执行通过
2020-08-20 21:32:12,019 - [test_04withdraw.py-->line:78] - INFO: 用例会员id不存在，执行通过
2020-08-20 21:32:12,093 - [test_04withdraw.py-->line:74] - ERROR: 用例会员id为数值，执行未通过
2020-08-20 21:32:12,093 - [test_04withdraw.py-->line:75] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-08-20 21:32:12,153 - [test_04withdraw.py-->line:78] - INFO: 用例会员id为小数，执行通过
2020-08-20 21:32:12,218 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额为0，执行未通过
2020-08-20 21:32:12,219 - [test_04withdraw.py-->line:75] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-08-20 21:32:12,268 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额为负数，执行未通过
2020-08-20 21:32:12,268 - [test_04withdraw.py-->line:75] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-08-20 21:32:12,316 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额为空，执行未通过
2020-08-20 21:32:12,316 - [test_04withdraw.py-->line:75] - ERROR:  :: 金额为空 != 余额为空
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额为空 != 余额为空
2020-08-20 21:32:12,378 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额-3位小数，执行未通过
2020-08-20 21:32:12,379 - [test_04withdraw.py-->line:75] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-08-20 21:32:12,440 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额-大于50万，执行未通过
2020-08-20 21:32:12,441 - [test_04withdraw.py-->line:75] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-08-20 21:32:12,496 - [test_04withdraw.py-->line:78] - INFO: 用例提现金额-非数字，执行通过
2020-08-20 21:32:37,872 - [test_01register.py-->line:63] - INFO: 用例注册成功-带注册名，执行通过
2020-08-20 21:32:38,222 - [test_01register.py-->line:63] - INFO: 用例成功-不带用户名，执行通过
2020-08-20 21:32:38,286 - [test_01register.py-->line:63] - INFO: 用例不输入手机号，执行通过
2020-08-20 21:32:38,348 - [test_01register.py-->line:63] - INFO: 用例手机号长度10位，执行通过
2020-08-20 21:32:38,409 - [test_01register.py-->line:63] - INFO: 用例手机号长度12位，执行通过
2020-08-20 21:32:38,451 - [test_01register.py-->line:63] - INFO: 用例手机号含有非法字符，执行通过
2020-08-20 21:32:38,572 - [test_01register.py-->line:63] - INFO: 用例已注册过的手机号，执行通过
2020-08-20 21:32:38,750 - [test_01register.py-->line:63] - INFO: 用例密码7位，执行通过
2020-08-20 21:32:38,917 - [test_01register.py-->line:63] - INFO: 用例密码17位，执行通过
2020-08-20 21:32:39,069 - [test_01register.py-->line:63] - INFO: 用例不输入密码，执行通过
2020-08-20 21:32:39,299 - [test_01register.py-->line:59] - ERROR: 用例注册名11位，执行未通过
2020-08-20 21:32:39,299 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 21:32:39,478 - [test_01register.py-->line:63] - INFO: 用例类型输入非0，1内容，执行通过
2020-08-20 21:32:39,712 - [test_01register.py-->line:59] - ERROR: 用例手机号为字符串类型，执行未通过
2020-08-20 21:32:39,712 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 21:32:39,856 - [test_02login.py-->line:54] - INFO: 用例登录成功，执行通过
2020-08-20 21:32:39,913 - [test_02login.py-->line:54] - INFO: 用例手机号为空，执行通过
2020-08-20 21:32:39,955 - [test_02login.py-->line:54] - INFO: 用例密码为空，执行通过
2020-08-20 21:32:40,063 - [test_02login.py-->line:54] - INFO: 用例手机号未注册，执行通过
2020-08-20 21:32:40,170 - [test_02login.py-->line:54] - INFO: 用例密码错误，执行通过
2020-08-20 21:32:40,215 - [test_02login.py-->line:54] - INFO: 用例手机号格式错误，执行通过
2020-08-20 21:32:40,488 - [test_03recharge_withdraw.py-->line:91] - INFO: 用例充值成功，执行通过
2020-08-20 21:32:40,645 - [test_03recharge_withdraw.py-->line:91] - INFO: 用例充值成功-金额为小数，执行通过
2020-08-20 21:32:40,698 - [test_03recharge_withdraw.py-->line:91] - INFO: 用例id错误(不是当前用的id)，执行通过
2020-08-20 21:32:40,748 - [test_03recharge_withdraw.py-->line:91] - INFO: 用例不输入id，执行通过
2020-08-20 21:32:40,792 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例不输入金额，执行未通过
2020-08-20 21:32:40,792 - [test_03recharge_withdraw.py-->line:88] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 78, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-20 21:32:40,843 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例充值金额为负数，执行未通过
2020-08-20 21:32:40,844 - [test_03recharge_withdraw.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-20 21:32:40,892 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例充值金额为500001，执行未通过
2020-08-20 21:32:40,892 - [test_03recharge_withdraw.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-20 21:32:40,950 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例充值金额非数字，执行未通过
2020-08-20 21:32:40,950 - [test_03recharge_withdraw.py-->line:88] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-20 21:32:41,008 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-20 21:32:41,008 - [test_03recharge_withdraw.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-20 21:32:41,277 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现成功-整数，执行通过
2020-08-20 21:32:41,449 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现成功-1位小数，执行通过
2020-08-20 21:32:41,607 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现成功-2位小数，执行通过
2020-08-20 21:32:41,776 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现成功-50万，执行通过
2020-08-20 21:32:41,825 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例会员id为空，执行通过
2020-08-20 21:32:41,873 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例会员id不存在，执行通过
2020-08-20 21:32:41,937 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例会员id为数值，执行未通过
2020-08-20 21:32:41,937 - [test_03recharge_withdraw.py-->line:156] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 146, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 21:32:41,999 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例会员id为小数，执行通过
2020-08-20 21:32:42,061 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额为0，执行未通过
2020-08-20 21:32:42,061 - [test_03recharge_withdraw.py-->line:156] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 146, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 21:32:42,116 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额为负数，执行未通过
2020-08-20 21:32:42,117 - [test_03recharge_withdraw.py-->line:156] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 147, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-20 21:32:42,173 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额为空，执行未通过
2020-08-20 21:32:42,173 - [test_03recharge_withdraw.py-->line:156] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 147, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-08-20 21:32:42,230 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额-3位小数，执行未通过
2020-08-20 21:32:42,231 - [test_03recharge_withdraw.py-->line:156] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 147, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-20 21:32:42,288 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额-大于50万，执行未通过
2020-08-20 21:32:42,288 - [test_03recharge_withdraw.py-->line:156] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 147, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-20 21:32:42,349 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现金额-非数字，执行通过
2020-08-20 21:33:33,729 - [test_01register.py-->line:63] - INFO: 用例注册成功-带注册名，执行通过
2020-08-20 21:33:34,051 - [test_01register.py-->line:63] - INFO: 用例成功-不带用户名，执行通过
2020-08-20 21:33:34,111 - [test_01register.py-->line:63] - INFO: 用例不输入手机号，执行通过
2020-08-20 21:33:34,176 - [test_01register.py-->line:63] - INFO: 用例手机号长度10位，执行通过
2020-08-20 21:33:34,221 - [test_01register.py-->line:63] - INFO: 用例手机号长度12位，执行通过
2020-08-20 21:33:34,277 - [test_01register.py-->line:63] - INFO: 用例手机号含有非法字符，执行通过
2020-08-20 21:33:34,388 - [test_01register.py-->line:63] - INFO: 用例已注册过的手机号，执行通过
2020-08-20 21:33:34,550 - [test_01register.py-->line:63] - INFO: 用例密码7位，执行通过
2020-08-20 21:33:34,694 - [test_01register.py-->line:63] - INFO: 用例密码17位，执行通过
2020-08-20 21:33:34,838 - [test_01register.py-->line:63] - INFO: 用例不输入密码，执行通过
2020-08-20 21:33:35,068 - [test_01register.py-->line:59] - ERROR: 用例注册名11位，执行未通过
2020-08-20 21:33:35,068 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 21:33:35,217 - [test_01register.py-->line:63] - INFO: 用例类型输入非0，1内容，执行通过
2020-08-20 21:33:35,449 - [test_01register.py-->line:59] - ERROR: 用例手机号为字符串类型，执行未通过
2020-08-20 21:33:35,449 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 21:33:35,556 - [test_02login.py-->line:54] - INFO: 用例登录成功，执行通过
2020-08-20 21:33:35,611 - [test_02login.py-->line:54] - INFO: 用例手机号为空，执行通过
2020-08-20 21:33:35,669 - [test_02login.py-->line:54] - INFO: 用例密码为空，执行通过
2020-08-20 21:33:35,782 - [test_02login.py-->line:54] - INFO: 用例手机号未注册，执行通过
2020-08-20 21:33:35,898 - [test_02login.py-->line:54] - INFO: 用例密码错误，执行通过
2020-08-20 21:33:35,951 - [test_02login.py-->line:54] - INFO: 用例手机号格式错误，执行通过
2020-08-20 21:33:36,219 - [test_03recharge_withdraw.py-->line:91] - INFO: 用例充值成功，执行通过
2020-08-20 21:33:36,371 - [test_03recharge_withdraw.py-->line:91] - INFO: 用例充值成功-金额为小数，执行通过
2020-08-20 21:33:36,431 - [test_03recharge_withdraw.py-->line:91] - INFO: 用例id错误(不是当前用的id)，执行通过
2020-08-20 21:33:36,487 - [test_03recharge_withdraw.py-->line:91] - INFO: 用例不输入id，执行通过
2020-08-20 21:33:36,539 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例不输入金额，执行未通过
2020-08-20 21:33:36,540 - [test_03recharge_withdraw.py-->line:88] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 78, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-20 21:33:36,592 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例充值金额为负数，执行未通过
2020-08-20 21:33:36,592 - [test_03recharge_withdraw.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-20 21:33:36,650 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例充值金额为500001，执行未通过
2020-08-20 21:33:36,650 - [test_03recharge_withdraw.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-20 21:33:36,701 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例充值金额非数字，执行未通过
2020-08-20 21:33:36,701 - [test_03recharge_withdraw.py-->line:88] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-20 21:33:36,747 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-20 21:33:36,747 - [test_03recharge_withdraw.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-20 21:33:37,020 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现成功-整数，执行通过
2020-08-20 21:33:37,171 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现成功-1位小数，执行通过
2020-08-20 21:33:37,321 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现成功-2位小数，执行通过
2020-08-20 21:33:37,475 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现成功-50万，执行通过
2020-08-20 21:33:37,544 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例会员id为空，执行通过
2020-08-20 21:33:37,600 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例会员id不存在，执行通过
2020-08-20 21:33:37,654 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例会员id为数值，执行未通过
2020-08-20 21:33:37,655 - [test_03recharge_withdraw.py-->line:156] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 146, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 21:33:37,715 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例会员id为小数，执行通过
2020-08-20 21:33:37,793 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额为0，执行未通过
2020-08-20 21:33:37,793 - [test_03recharge_withdraw.py-->line:156] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 146, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 21:33:37,841 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额为负数，执行未通过
2020-08-20 21:33:37,842 - [test_03recharge_withdraw.py-->line:156] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 147, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-20 21:33:37,888 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额为空，执行未通过
2020-08-20 21:33:37,888 - [test_03recharge_withdraw.py-->line:156] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 147, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-08-20 21:33:37,933 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额-3位小数，执行未通过
2020-08-20 21:33:37,934 - [test_03recharge_withdraw.py-->line:156] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 147, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-20 21:33:37,998 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额-大于50万，执行未通过
2020-08-20 21:33:37,998 - [test_03recharge_withdraw.py-->line:156] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 147, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-20 21:33:38,044 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现金额-非数字，执行通过
2020-08-20 21:33:38,151 - [test_04withdraw.py-->line:78] - INFO: 用例登录成功，执行通过
2020-08-20 21:33:38,294 - [test_04withdraw.py-->line:78] - INFO: 用例提现成功-整数，执行通过
2020-08-20 21:33:38,448 - [test_04withdraw.py-->line:78] - INFO: 用例提现成功-1位小数，执行通过
2020-08-20 21:33:38,589 - [test_04withdraw.py-->line:78] - INFO: 用例提现成功-2位小数，执行通过
2020-08-20 21:33:38,682 - [test_04withdraw.py-->line:74] - ERROR: 用例提现成功-50万，执行未通过
2020-08-20 21:33:38,682 - [test_04withdraw.py-->line:75] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-20 21:33:38,742 - [test_04withdraw.py-->line:78] - INFO: 用例会员id为空，执行通过
2020-08-20 21:33:38,791 - [test_04withdraw.py-->line:78] - INFO: 用例会员id不存在，执行通过
2020-08-20 21:33:38,847 - [test_04withdraw.py-->line:74] - ERROR: 用例会员id为数值，执行未通过
2020-08-20 21:33:38,847 - [test_04withdraw.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 21:33:38,912 - [test_04withdraw.py-->line:78] - INFO: 用例会员id为小数，执行通过
2020-08-20 21:33:38,962 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额为0，执行未通过
2020-08-20 21:33:38,963 - [test_04withdraw.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 21:33:39,019 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额为负数，执行未通过
2020-08-20 21:33:39,019 - [test_04withdraw.py-->line:75] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-20 21:33:39,084 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额为空，执行未通过
2020-08-20 21:33:39,084 - [test_04withdraw.py-->line:75] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-08-20 21:33:39,132 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额-3位小数，执行未通过
2020-08-20 21:33:39,132 - [test_04withdraw.py-->line:75] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-20 21:33:39,189 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额-大于50万，执行未通过
2020-08-20 21:33:39,189 - [test_04withdraw.py-->line:75] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-20 21:33:39,242 - [test_04withdraw.py-->line:78] - INFO: 用例提现金额-非数字，执行通过
2020-08-20 21:34:32,063 - [test_01register.py-->line:63] - INFO: 用例注册成功-带注册名，执行通过
2020-08-20 21:34:32,413 - [test_01register.py-->line:63] - INFO: 用例成功-不带用户名，执行通过
2020-08-20 21:34:32,480 - [test_01register.py-->line:63] - INFO: 用例不输入手机号，执行通过
2020-08-20 21:34:32,530 - [test_01register.py-->line:63] - INFO: 用例手机号长度10位，执行通过
2020-08-20 21:34:32,596 - [test_01register.py-->line:63] - INFO: 用例手机号长度12位，执行通过
2020-08-20 21:34:32,642 - [test_01register.py-->line:63] - INFO: 用例手机号含有非法字符，执行通过
2020-08-20 21:34:32,768 - [test_01register.py-->line:63] - INFO: 用例已注册过的手机号，执行通过
2020-08-20 21:34:32,948 - [test_01register.py-->line:63] - INFO: 用例密码7位，执行通过
2020-08-20 21:34:33,136 - [test_01register.py-->line:63] - INFO: 用例密码17位，执行通过
2020-08-20 21:34:33,297 - [test_01register.py-->line:63] - INFO: 用例不输入密码，执行通过
2020-08-20 21:34:33,539 - [test_01register.py-->line:59] - ERROR: 用例注册名11位，执行未通过
2020-08-20 21:34:33,539 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 21:34:33,717 - [test_01register.py-->line:63] - INFO: 用例类型输入非0，1内容，执行通过
2020-08-20 21:34:33,955 - [test_01register.py-->line:59] - ERROR: 用例手机号为字符串类型，执行未通过
2020-08-20 21:34:33,956 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 21:34:34,087 - [test_02login.py-->line:54] - INFO: 用例登录成功，执行通过
2020-08-20 21:34:34,144 - [test_02login.py-->line:54] - INFO: 用例手机号为空，执行通过
2020-08-20 21:34:34,189 - [test_02login.py-->line:54] - INFO: 用例密码为空，执行通过
2020-08-20 21:34:34,304 - [test_02login.py-->line:54] - INFO: 用例手机号未注册，执行通过
2020-08-20 21:34:34,420 - [test_02login.py-->line:54] - INFO: 用例密码错误，执行通过
2020-08-20 21:34:34,476 - [test_02login.py-->line:54] - INFO: 用例手机号格式错误，执行通过
2020-08-20 21:34:34,761 - [test_03recharge_withdraw.py-->line:91] - INFO: 用例充值成功，执行通过
2020-08-20 21:34:34,923 - [test_03recharge_withdraw.py-->line:91] - INFO: 用例充值成功-金额为小数，执行通过
2020-08-20 21:34:34,970 - [test_03recharge_withdraw.py-->line:91] - INFO: 用例id错误(不是当前用的id)，执行通过
2020-08-20 21:34:35,028 - [test_03recharge_withdraw.py-->line:91] - INFO: 用例不输入id，执行通过
2020-08-20 21:34:35,080 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例不输入金额，执行未通过
2020-08-20 21:34:35,081 - [test_03recharge_withdraw.py-->line:88] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 78, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-20 21:34:35,148 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例充值金额为负数，执行未通过
2020-08-20 21:34:35,148 - [test_03recharge_withdraw.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-20 21:34:35,211 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例充值金额为500001，执行未通过
2020-08-20 21:34:35,212 - [test_03recharge_withdraw.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-20 21:34:35,275 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例充值金额非数字，执行未通过
2020-08-20 21:34:35,275 - [test_03recharge_withdraw.py-->line:88] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-20 21:34:35,328 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-20 21:34:35,328 - [test_03recharge_withdraw.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-20 21:34:35,594 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现成功-整数，执行通过
2020-08-20 21:34:35,746 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现成功-1位小数，执行通过
2020-08-20 21:34:35,905 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现成功-2位小数，执行通过
2020-08-20 21:34:36,009 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现成功-50万，执行未通过
2020-08-20 21:34:36,009 - [test_03recharge_withdraw.py-->line:156] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 146, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-20 21:34:36,067 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例会员id为空，执行通过
2020-08-20 21:34:36,110 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例会员id不存在，执行通过
2020-08-20 21:34:36,177 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例会员id为数值，执行未通过
2020-08-20 21:34:36,178 - [test_03recharge_withdraw.py-->line:156] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 146, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 21:34:36,237 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例会员id为小数，执行通过
2020-08-20 21:34:36,294 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额为0，执行未通过
2020-08-20 21:34:36,294 - [test_03recharge_withdraw.py-->line:156] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 146, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 21:34:36,363 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额为负数，执行未通过
2020-08-20 21:34:36,364 - [test_03recharge_withdraw.py-->line:156] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 147, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-20 21:34:36,414 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额为空，执行未通过
2020-08-20 21:34:36,414 - [test_03recharge_withdraw.py-->line:156] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 147, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-08-20 21:34:36,458 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额-3位小数，执行未通过
2020-08-20 21:34:36,459 - [test_03recharge_withdraw.py-->line:156] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 147, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-20 21:34:36,526 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额-大于50万，执行未通过
2020-08-20 21:34:36,527 - [test_03recharge_withdraw.py-->line:156] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 147, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-20 21:34:36,580 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现金额-非数字，执行通过
2020-08-20 21:34:36,697 - [test_04withdraw.py-->line:82] - INFO: 用例登录成功，执行通过
2020-08-20 21:34:36,881 - [test_04withdraw.py-->line:82] - INFO: 用例提现成功-整数，执行通过
2020-08-20 21:34:37,032 - [test_04withdraw.py-->line:82] - INFO: 用例提现成功-1位小数，执行通过
2020-08-20 21:34:37,199 - [test_04withdraw.py-->line:82] - INFO: 用例提现成功-2位小数，执行通过
2020-08-20 21:34:37,302 - [test_04withdraw.py-->line:78] - ERROR: 用例提现成功-50万，执行未通过
2020-08-20 21:34:37,302 - [test_04withdraw.py-->line:79] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 70, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-20 21:34:37,347 - [test_04withdraw.py-->line:82] - INFO: 用例会员id为空，执行通过
2020-08-20 21:34:37,413 - [test_04withdraw.py-->line:82] - INFO: 用例会员id不存在，执行通过
2020-08-20 21:34:37,466 - [test_04withdraw.py-->line:78] - ERROR: 用例会员id为数值，执行未通过
2020-08-20 21:34:37,466 - [test_04withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 70, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 21:34:37,521 - [test_04withdraw.py-->line:82] - INFO: 用例会员id为小数，执行通过
2020-08-20 21:34:37,584 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为0，执行未通过
2020-08-20 21:34:37,584 - [test_04withdraw.py-->line:79] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 70, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-20 21:34:37,644 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为负数，执行未通过
2020-08-20 21:34:37,644 - [test_04withdraw.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-20 21:34:37,702 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额为空，执行未通过
2020-08-20 21:34:37,702 - [test_04withdraw.py-->line:79] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-08-20 21:34:37,771 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-3位小数，执行未通过
2020-08-20 21:34:37,771 - [test_04withdraw.py-->line:79] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-20 21:34:37,843 - [test_04withdraw.py-->line:78] - ERROR: 用例提现金额-大于50万，执行未通过
2020-08-20 21:34:37,844 - [test_04withdraw.py-->line:79] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-20 21:34:37,901 - [test_04withdraw.py-->line:82] - INFO: 用例提现金额-非数字，执行通过
2020-08-21 13:46:46,963 - [test_01register.py-->line:63] - INFO: 用例注册成功-带注册名，执行通过
2020-08-21 13:46:47,310 - [test_01register.py-->line:63] - INFO: 用例成功-不带用户名，执行通过
2020-08-21 13:46:47,366 - [test_01register.py-->line:63] - INFO: 用例不输入手机号，执行通过
2020-08-21 13:46:47,424 - [test_01register.py-->line:63] - INFO: 用例手机号长度10位，执行通过
2020-08-21 13:46:47,479 - [test_01register.py-->line:63] - INFO: 用例手机号长度12位，执行通过
2020-08-21 13:46:47,534 - [test_01register.py-->line:63] - INFO: 用例手机号含有非法字符，执行通过
2020-08-21 13:46:47,670 - [test_01register.py-->line:63] - INFO: 用例已注册过的手机号，执行通过
2020-08-21 13:46:47,821 - [test_01register.py-->line:63] - INFO: 用例密码7位，执行通过
2020-08-21 13:46:47,968 - [test_01register.py-->line:63] - INFO: 用例密码17位，执行通过
2020-08-21 13:46:48,130 - [test_01register.py-->line:63] - INFO: 用例不输入密码，执行通过
2020-08-21 13:46:48,352 - [test_01register.py-->line:59] - ERROR: 用例注册名11位，执行未通过
2020-08-21 13:46:48,352 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-21 13:46:50,507 - [test_01register.py-->line:59] - ERROR: 用例注册名11位，执行未通过
2020-08-21 13:46:50,508 - [test_01register.py-->line:60] - ERROR: '用户昵称长度超过10位' != '账号已存在'
- 用户昵称长度超过10位
+ 账号已存在
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 50, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '用户昵称长度超过10位' != '账号已存在'
- 用户昵称长度超过10位
+ 账号已存在

2020-08-21 13:46:52,568 - [test_01register.py-->line:59] - ERROR: 用例注册名11位，执行未通过
2020-08-21 13:46:52,569 - [test_01register.py-->line:60] - ERROR: '用户昵称长度超过10位' != '账号已存在'
- 用户昵称长度超过10位
+ 账号已存在
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 50, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '用户昵称长度超过10位' != '账号已存在'
- 用户昵称长度超过10位
+ 账号已存在

2020-08-21 13:46:52,726 - [test_01register.py-->line:63] - INFO: 用例类型输入非0，1内容，执行通过
2020-08-21 13:46:52,943 - [test_01register.py-->line:59] - ERROR: 用例手机号为字符串类型，执行未通过
2020-08-21 13:46:52,944 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-21 13:46:55,057 - [test_01register.py-->line:59] - ERROR: 用例手机号为字符串类型，执行未通过
2020-08-21 13:46:55,057 - [test_01register.py-->line:60] - ERROR: '类型错误' != '账号已存在'
- 类型错误
+ 账号已存在
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 50, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '账号已存在'
- 类型错误
+ 账号已存在

2020-08-21 13:46:57,104 - [test_01register.py-->line:59] - ERROR: 用例手机号为字符串类型，执行未通过
2020-08-21 13:46:57,105 - [test_01register.py-->line:60] - ERROR: '类型错误' != '账号已存在'
- 类型错误
+ 账号已存在
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 50, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '账号已存在'
- 类型错误
+ 账号已存在

2020-08-21 13:46:57,212 - [test_02login.py-->line:54] - INFO: 用例登录成功，执行通过
2020-08-21 13:46:57,270 - [test_02login.py-->line:54] - INFO: 用例手机号为空，执行通过
2020-08-21 13:46:57,316 - [test_02login.py-->line:54] - INFO: 用例密码为空，执行通过
2020-08-21 13:46:57,431 - [test_02login.py-->line:54] - INFO: 用例手机号未注册，执行通过
2020-08-21 13:46:57,544 - [test_02login.py-->line:54] - INFO: 用例密码错误，执行通过
2020-08-21 13:46:57,587 - [test_02login.py-->line:54] - INFO: 用例手机号格式错误，执行通过
2020-08-21 13:48:33,810 - [test_04withdraw.py-->line:83] - INFO: 用例登录成功，执行通过
2020-08-21 13:48:33,936 - [test_04withdraw.py-->line:83] - INFO: 用例提现成功-整数，执行通过
2020-08-21 13:48:34,077 - [test_04withdraw.py-->line:83] - INFO: 用例提现成功-1位小数，执行通过
2020-08-21 13:48:34,201 - [test_04withdraw.py-->line:83] - INFO: 用例提现成功-2位小数，执行通过
2020-08-21 13:48:34,240 - [test_04withdraw.py-->line:79] - ERROR: 用例充值成功-50万，执行未通过
2020-08-21 13:48:34,240 - [test_04withdraw.py-->line:80] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-08-21 13:48:36,279 - [test_04withdraw.py-->line:79] - ERROR: 用例充值成功-50万，执行未通过
2020-08-21 13:48:36,279 - [test_04withdraw.py-->line:80] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-08-21 13:48:38,323 - [test_04withdraw.py-->line:79] - ERROR: 用例充值成功-50万，执行未通过
2020-08-21 13:48:38,324 - [test_04withdraw.py-->line:80] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-08-21 13:48:38,417 - [test_04withdraw.py-->line:79] - ERROR: 用例提现成功-50万，执行未通过
2020-08-21 13:48:38,417 - [test_04withdraw.py-->line:80] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-21 13:48:40,518 - [test_04withdraw.py-->line:79] - ERROR: 用例提现成功-50万，执行未通过
2020-08-21 13:48:40,518 - [test_04withdraw.py-->line:80] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-21 13:48:42,618 - [test_04withdraw.py-->line:79] - ERROR: 用例提现成功-50万，执行未通过
2020-08-21 13:48:42,619 - [test_04withdraw.py-->line:80] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-21 13:48:42,678 - [test_04withdraw.py-->line:83] - INFO: 用例会员id为空，执行通过
2020-08-21 13:48:42,718 - [test_04withdraw.py-->line:83] - INFO: 用例会员id不存在，执行通过
2020-08-21 13:48:42,767 - [test_04withdraw.py-->line:79] - ERROR: 用例会员id为数值，执行未通过
2020-08-21 13:48:42,768 - [test_04withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-21 13:48:44,832 - [test_04withdraw.py-->line:79] - ERROR: 用例会员id为数值，执行未通过
2020-08-21 13:48:44,833 - [test_04withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-21 13:48:46,904 - [test_04withdraw.py-->line:79] - ERROR: 用例会员id为数值，执行未通过
2020-08-21 13:48:46,904 - [test_04withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-21 13:48:46,960 - [test_04withdraw.py-->line:83] - INFO: 用例会员id为小数，执行通过
2020-08-21 13:48:47,012 - [test_04withdraw.py-->line:79] - ERROR: 用例提现金额为0，执行未通过
2020-08-21 13:48:47,012 - [test_04withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-21 13:48:49,079 - [test_04withdraw.py-->line:79] - ERROR: 用例提现金额为0，执行未通过
2020-08-21 13:48:49,080 - [test_04withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-21 13:48:51,132 - [test_04withdraw.py-->line:79] - ERROR: 用例提现金额为0，执行未通过
2020-08-21 13:48:51,132 - [test_04withdraw.py-->line:80] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 71, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-21 13:48:51,184 - [test_04withdraw.py-->line:79] - ERROR: 用例提现金额为负数，执行未通过
2020-08-21 13:48:51,184 - [test_04withdraw.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 72, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-21 13:48:53,231 - [test_04withdraw.py-->line:79] - ERROR: 用例提现金额为负数，执行未通过
2020-08-21 13:48:53,231 - [test_04withdraw.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 72, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-21 13:48:55,279 - [test_04withdraw.py-->line:79] - ERROR: 用例提现金额为负数，执行未通过
2020-08-21 13:48:55,280 - [test_04withdraw.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 72, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-21 13:48:55,338 - [test_04withdraw.py-->line:79] - ERROR: 用例提现金额为空，执行未通过
2020-08-21 13:48:55,338 - [test_04withdraw.py-->line:80] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 72, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-08-21 13:48:57,397 - [test_04withdraw.py-->line:79] - ERROR: 用例提现金额为空，执行未通过
2020-08-21 13:48:57,397 - [test_04withdraw.py-->line:80] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 72, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-08-21 13:48:59,441 - [test_04withdraw.py-->line:79] - ERROR: 用例提现金额为空，执行未通过
2020-08-21 13:48:59,441 - [test_04withdraw.py-->line:80] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 72, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-08-21 13:48:59,483 - [test_04withdraw.py-->line:79] - ERROR: 用例提现金额-3位小数，执行未通过
2020-08-21 13:48:59,484 - [test_04withdraw.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 72, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-21 13:49:01,527 - [test_04withdraw.py-->line:79] - ERROR: 用例提现金额-3位小数，执行未通过
2020-08-21 13:49:01,528 - [test_04withdraw.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 72, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-21 13:49:03,577 - [test_04withdraw.py-->line:79] - ERROR: 用例提现金额-3位小数，执行未通过
2020-08-21 13:49:03,577 - [test_04withdraw.py-->line:80] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 72, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-21 13:49:03,616 - [test_04withdraw.py-->line:79] - ERROR: 用例提现金额-大于50万，执行未通过
2020-08-21 13:49:03,616 - [test_04withdraw.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 72, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-21 13:49:05,672 - [test_04withdraw.py-->line:79] - ERROR: 用例提现金额-大于50万，执行未通过
2020-08-21 13:49:05,672 - [test_04withdraw.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 72, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-21 13:49:07,718 - [test_04withdraw.py-->line:79] - ERROR: 用例提现金额-大于50万，执行未通过
2020-08-21 13:49:07,719 - [test_04withdraw.py-->line:80] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 72, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-21 13:49:07,774 - [test_04withdraw.py-->line:83] - INFO: 用例提现金额-非数字，执行通过
2020-08-22 11:30:46,427 - [test_04withdraw.py-->line:78] - INFO: 用例登录成功，执行通过
2020-08-22 11:30:46,599 - [test_04withdraw.py-->line:78] - INFO: 用例提现成功-整数，执行通过
2020-08-22 11:30:46,766 - [test_04withdraw.py-->line:78] - INFO: 用例提现成功-1位小数，执行通过
2020-08-22 11:30:46,935 - [test_04withdraw.py-->line:78] - INFO: 用例提现成功-2位小数，执行通过
2020-08-22 11:30:46,981 - [test_04withdraw.py-->line:74] - ERROR: 用例充值成功-50万，执行未通过
2020-08-22 11:30:46,982 - [test_04withdraw.py-->line:75] - ERROR:  :: 0 != 1003
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 1003
2020-08-22 11:30:47,111 - [test_04withdraw.py-->line:74] - ERROR: 用例提现成功-50万，执行未通过
2020-08-22 11:30:47,111 - [test_04withdraw.py-->line:75] - ERROR:  :: 0 != 1002
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 0 != 1002
2020-08-22 11:30:47,165 - [test_04withdraw.py-->line:78] - INFO: 用例会员id为空，执行通过
2020-08-22 11:30:47,244 - [test_04withdraw.py-->line:78] - INFO: 用例会员id不存在，执行通过
2020-08-22 11:30:47,293 - [test_04withdraw.py-->line:74] - ERROR: 用例会员id为数值，执行未通过
2020-08-22 11:30:47,294 - [test_04withdraw.py-->line:75] - ERROR:  :: 2 != 1002
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 1002
2020-08-22 11:30:47,361 - [test_04withdraw.py-->line:78] - INFO: 用例会员id为小数，执行通过
2020-08-22 11:30:47,434 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额为0，执行未通过
2020-08-22 11:30:47,435 - [test_04withdraw.py-->line:75] - ERROR:  :: 2 != 0
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 2 != 0
2020-08-22 11:30:47,489 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额为负数，执行未通过
2020-08-22 11:30:47,489 - [test_04withdraw.py-->line:75] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-08-22 11:30:47,545 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额为空，执行未通过
2020-08-22 11:30:47,545 - [test_04withdraw.py-->line:75] - ERROR:  :: 金额为空 != 余额为空
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额为空 != 余额为空
2020-08-22 11:30:47,610 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额-3位小数，执行未通过
2020-08-22 11:30:47,611 - [test_04withdraw.py-->line:75] - ERROR:  :: 金额小数超过两位 != 余额小数超过两位
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额小数超过两位 != 余额小数超过两位
2020-08-22 11:30:47,667 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额-大于50万，执行未通过
2020-08-22 11:30:47,667 - [test_04withdraw.py-->line:75] - ERROR:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
Traceback (most recent call last):
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 32, in _patched_equals
    old(self, first, second, msg)
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\Program Files\JetBrains\PyCharm 2019.1.1\helpers\pycharm\teamcity\diff_tools.py", line 38, in _patched_equals
    raise error
teamcity.diff_tools.EqualsAssertionError:  :: 金额必须大于0并且小于或者等于500000 != 余额必须大于0并且小于或者等于5000000
2020-08-22 11:30:47,734 - [test_04withdraw.py-->line:78] - INFO: 用例提现金额-非数字，执行通过
2020-08-22 11:32:49,357 - [test_01register.py-->line:63] - INFO: 用例注册成功-带注册名，执行通过
2020-08-22 11:32:49,769 - [test_01register.py-->line:63] - INFO: 用例成功-不带用户名，执行通过
2020-08-22 11:32:49,831 - [test_01register.py-->line:63] - INFO: 用例不输入手机号，执行通过
2020-08-22 11:32:49,898 - [test_01register.py-->line:63] - INFO: 用例手机号长度10位，执行通过
2020-08-22 11:32:49,946 - [test_01register.py-->line:63] - INFO: 用例手机号长度12位，执行通过
2020-08-22 11:32:50,025 - [test_01register.py-->line:63] - INFO: 用例手机号含有非法字符，执行通过
2020-08-22 11:32:50,139 - [test_01register.py-->line:63] - INFO: 用例已注册过的手机号，执行通过
2020-08-22 11:32:50,326 - [test_01register.py-->line:63] - INFO: 用例密码7位，执行通过
2020-08-22 11:32:50,494 - [test_01register.py-->line:63] - INFO: 用例密码17位，执行通过
2020-08-22 11:32:50,669 - [test_01register.py-->line:63] - INFO: 用例不输入密码，执行通过
2020-08-22 11:32:50,924 - [test_01register.py-->line:59] - ERROR: 用例注册名11位，执行未通过
2020-08-22 11:32:50,924 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-22 11:32:53,055 - [test_01register.py-->line:59] - ERROR: 用例注册名11位，执行未通过
2020-08-22 11:32:53,056 - [test_01register.py-->line:60] - ERROR: '用户昵称长度超过10位' != '账号已存在'
- 用户昵称长度超过10位
+ 账号已存在
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 50, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '用户昵称长度超过10位' != '账号已存在'
- 用户昵称长度超过10位
+ 账号已存在

2020-08-22 11:32:55,105 - [test_01register.py-->line:59] - ERROR: 用例注册名11位，执行未通过
2020-08-22 11:32:55,105 - [test_01register.py-->line:60] - ERROR: '用户昵称长度超过10位' != '账号已存在'
- 用户昵称长度超过10位
+ 账号已存在
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 50, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '用户昵称长度超过10位' != '账号已存在'
- 用户昵称长度超过10位
+ 账号已存在

2020-08-22 11:32:55,270 - [test_01register.py-->line:63] - INFO: 用例类型输入非0，1内容，执行通过
2020-08-22 11:32:55,520 - [test_01register.py-->line:59] - ERROR: 用例手机号为字符串类型，执行未通过
2020-08-22 11:32:55,521 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-22 11:32:57,648 - [test_01register.py-->line:59] - ERROR: 用例手机号为字符串类型，执行未通过
2020-08-22 11:32:57,648 - [test_01register.py-->line:60] - ERROR: '类型错误' != '账号已存在'
- 类型错误
+ 账号已存在
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 50, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '账号已存在'
- 类型错误
+ 账号已存在

2020-08-22 11:32:59,717 - [test_01register.py-->line:59] - ERROR: 用例手机号为字符串类型，执行未通过
2020-08-22 11:32:59,717 - [test_01register.py-->line:60] - ERROR: '类型错误' != '账号已存在'
- 类型错误
+ 账号已存在
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 50, in test_register
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '类型错误' != '账号已存在'
- 类型错误
+ 账号已存在

2020-08-22 11:32:59,881 - [test_02login.py-->line:54] - INFO: 用例登录成功，执行通过
2020-08-22 11:32:59,945 - [test_02login.py-->line:54] - INFO: 用例手机号为空，执行通过
2020-08-22 11:33:00,008 - [test_02login.py-->line:54] - INFO: 用例密码为空，执行通过
2020-08-22 11:33:00,140 - [test_02login.py-->line:54] - INFO: 用例手机号未注册，执行通过
2020-08-22 11:33:00,267 - [test_02login.py-->line:54] - INFO: 用例密码错误，执行通过
2020-08-22 11:33:00,310 - [test_02login.py-->line:54] - INFO: 用例手机号格式错误，执行通过
2020-08-22 11:34:37,109 - [test_04withdraw.py-->line:78] - INFO: 用例登录成功，执行通过
2020-08-22 11:34:37,216 - [test_04withdraw.py-->line:74] - ERROR: 用例提现成功-整数，执行未通过
2020-08-22 11:34:37,216 - [test_04withdraw.py-->line:75] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-22 11:34:39,324 - [test_04withdraw.py-->line:74] - ERROR: 用例提现成功-整数，执行未通过
2020-08-22 11:34:39,324 - [test_04withdraw.py-->line:75] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-22 11:34:41,439 - [test_04withdraw.py-->line:74] - ERROR: 用例提现成功-整数，执行未通过
2020-08-22 11:34:41,439 - [test_04withdraw.py-->line:75] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-22 11:34:41,557 - [test_04withdraw.py-->line:74] - ERROR: 用例提现成功-1位小数，执行未通过
2020-08-22 11:34:41,557 - [test_04withdraw.py-->line:75] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-22 11:34:43,661 - [test_04withdraw.py-->line:74] - ERROR: 用例提现成功-1位小数，执行未通过
2020-08-22 11:34:43,661 - [test_04withdraw.py-->line:75] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-22 11:34:45,772 - [test_04withdraw.py-->line:74] - ERROR: 用例提现成功-1位小数，执行未通过
2020-08-22 11:34:45,773 - [test_04withdraw.py-->line:75] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-22 11:34:45,877 - [test_04withdraw.py-->line:74] - ERROR: 用例提现成功-2位小数，执行未通过
2020-08-22 11:34:45,877 - [test_04withdraw.py-->line:75] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-22 11:34:47,998 - [test_04withdraw.py-->line:74] - ERROR: 用例提现成功-2位小数，执行未通过
2020-08-22 11:34:47,998 - [test_04withdraw.py-->line:75] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-22 11:34:50,108 - [test_04withdraw.py-->line:74] - ERROR: 用例提现成功-2位小数，执行未通过
2020-08-22 11:34:50,108 - [test_04withdraw.py-->line:75] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-22 11:34:50,161 - [test_04withdraw.py-->line:74] - ERROR: 用例充值成功-50万，执行未通过
2020-08-22 11:34:50,161 - [test_04withdraw.py-->line:75] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-08-22 11:34:52,229 - [test_04withdraw.py-->line:74] - ERROR: 用例充值成功-50万，执行未通过
2020-08-22 11:34:52,229 - [test_04withdraw.py-->line:75] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-08-22 11:34:54,290 - [test_04withdraw.py-->line:74] - ERROR: 用例充值成功-50万，执行未通过
2020-08-22 11:34:54,290 - [test_04withdraw.py-->line:75] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-08-22 11:34:54,397 - [test_04withdraw.py-->line:74] - ERROR: 用例提现成功-50万，执行未通过
2020-08-22 11:34:54,398 - [test_04withdraw.py-->line:75] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-22 11:34:56,501 - [test_04withdraw.py-->line:74] - ERROR: 用例提现成功-50万，执行未通过
2020-08-22 11:34:56,501 - [test_04withdraw.py-->line:75] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-22 11:34:58,606 - [test_04withdraw.py-->line:74] - ERROR: 用例提现成功-50万，执行未通过
2020-08-22 11:34:58,606 - [test_04withdraw.py-->line:75] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-22 11:34:58,662 - [test_04withdraw.py-->line:78] - INFO: 用例会员id为空，执行通过
2020-08-22 11:34:58,726 - [test_04withdraw.py-->line:78] - INFO: 用例会员id不存在，执行通过
2020-08-22 11:34:58,786 - [test_04withdraw.py-->line:74] - ERROR: 用例会员id为数值，执行未通过
2020-08-22 11:34:58,786 - [test_04withdraw.py-->line:75] - ERROR: 2 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002
2020-08-22 11:35:00,844 - [test_04withdraw.py-->line:74] - ERROR: 用例会员id为数值，执行未通过
2020-08-22 11:35:00,844 - [test_04withdraw.py-->line:75] - ERROR: 2 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002
2020-08-22 11:35:02,909 - [test_04withdraw.py-->line:74] - ERROR: 用例会员id为数值，执行未通过
2020-08-22 11:35:02,910 - [test_04withdraw.py-->line:75] - ERROR: 2 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002
2020-08-22 11:35:02,979 - [test_04withdraw.py-->line:78] - INFO: 用例会员id为小数，执行通过
2020-08-22 11:35:03,032 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额为0，执行未通过
2020-08-22 11:35:03,032 - [test_04withdraw.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-22 11:35:05,102 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额为0，执行未通过
2020-08-22 11:35:05,103 - [test_04withdraw.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-22 11:35:07,171 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额为0，执行未通过
2020-08-22 11:35:07,171 - [test_04withdraw.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-22 11:35:07,235 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额为负数，执行未通过
2020-08-22 11:35:07,235 - [test_04withdraw.py-->line:75] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-22 11:35:09,300 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额为负数，执行未通过
2020-08-22 11:35:09,300 - [test_04withdraw.py-->line:75] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-22 11:35:11,357 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额为负数，执行未通过
2020-08-22 11:35:11,357 - [test_04withdraw.py-->line:75] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-22 11:35:11,415 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额为空，执行未通过
2020-08-22 11:35:11,416 - [test_04withdraw.py-->line:75] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-08-22 11:35:13,473 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额为空，执行未通过
2020-08-22 11:35:13,473 - [test_04withdraw.py-->line:75] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-08-22 11:35:15,536 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额为空，执行未通过
2020-08-22 11:35:15,536 - [test_04withdraw.py-->line:75] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-08-22 11:35:15,590 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额-3位小数，执行未通过
2020-08-22 11:35:15,591 - [test_04withdraw.py-->line:75] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-22 11:35:17,650 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额-3位小数，执行未通过
2020-08-22 11:35:17,651 - [test_04withdraw.py-->line:75] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-22 11:35:19,708 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额-3位小数，执行未通过
2020-08-22 11:35:19,708 - [test_04withdraw.py-->line:75] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-22 11:35:19,773 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额-大于50万，执行未通过
2020-08-22 11:35:19,773 - [test_04withdraw.py-->line:75] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-22 11:35:21,829 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额-大于50万，执行未通过
2020-08-22 11:35:21,829 - [test_04withdraw.py-->line:75] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-22 11:35:23,899 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额-大于50万，执行未通过
2020-08-22 11:35:23,899 - [test_04withdraw.py-->line:75] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-22 11:35:23,960 - [test_04withdraw.py-->line:78] - INFO: 用例提现金额-非数字，执行通过
2020-08-22 11:37:01,116 - [test_01register.py-->line:63] - INFO: 用例注册成功-带注册名，执行通过
2020-08-22 11:37:01,518 - [test_01register.py-->line:63] - INFO: 用例成功-不带用户名，执行通过
2020-08-22 11:37:01,587 - [test_01register.py-->line:63] - INFO: 用例不输入手机号，执行通过
2020-08-22 11:37:01,633 - [test_01register.py-->line:63] - INFO: 用例手机号长度10位，执行通过
2020-08-22 11:37:01,706 - [test_01register.py-->line:63] - INFO: 用例手机号长度12位，执行通过
2020-08-22 11:37:01,773 - [test_01register.py-->line:63] - INFO: 用例手机号含有非法字符，执行通过
2020-08-22 11:37:01,911 - [test_01register.py-->line:63] - INFO: 用例已注册过的手机号，执行通过
2020-08-22 11:37:02,106 - [test_01register.py-->line:63] - INFO: 用例密码7位，执行通过
2020-08-22 11:37:02,342 - [test_01register.py-->line:63] - INFO: 用例密码17位，执行通过
2020-08-22 11:37:02,525 - [test_01register.py-->line:63] - INFO: 用例不输入密码，执行通过
2020-08-22 11:37:02,785 - [test_01register.py-->line:59] - ERROR: 用例注册名11位，执行未通过
2020-08-22 11:37:02,785 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-22 11:37:02,970 - [test_01register.py-->line:63] - INFO: 用例类型输入非0，1内容，执行通过
2020-08-22 11:37:03,227 - [test_01register.py-->line:59] - ERROR: 用例手机号为字符串类型，执行未通过
2020-08-22 11:37:03,227 - [test_01register.py-->line:60] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_01register.py", line 49, in test_register
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-22 11:37:03,349 - [test_02login.py-->line:54] - INFO: 用例登录成功，执行通过
2020-08-22 11:37:03,406 - [test_02login.py-->line:54] - INFO: 用例手机号为空，执行通过
2020-08-22 11:37:03,450 - [test_02login.py-->line:54] - INFO: 用例密码为空，执行通过
2020-08-22 11:37:03,562 - [test_02login.py-->line:54] - INFO: 用例手机号未注册，执行通过
2020-08-22 11:37:03,696 - [test_02login.py-->line:54] - INFO: 用例密码错误，执行通过
2020-08-22 11:37:03,761 - [test_02login.py-->line:54] - INFO: 用例手机号格式错误，执行通过
2020-08-22 11:37:04,067 - [test_03recharge_withdraw.py-->line:91] - INFO: 用例充值成功，执行通过
2020-08-22 11:37:04,248 - [test_03recharge_withdraw.py-->line:91] - INFO: 用例充值成功-金额为小数，执行通过
2020-08-22 11:37:04,302 - [test_03recharge_withdraw.py-->line:91] - INFO: 用例id错误(不是当前用的id)，执行通过
2020-08-22 11:37:04,351 - [test_03recharge_withdraw.py-->line:91] - INFO: 用例不输入id，执行通过
2020-08-22 11:37:04,400 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例不输入金额，执行未通过
2020-08-22 11:37:04,400 - [test_03recharge_withdraw.py-->line:88] - ERROR: 1 != 2
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 78, in test_recharge
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 1 != 2
2020-08-22 11:37:04,468 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例充值金额为负数，执行未通过
2020-08-22 11:37:04,469 - [test_03recharge_withdraw.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-22 11:37:04,529 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例充值金额为500001，执行未通过
2020-08-22 11:37:04,530 - [test_03recharge_withdraw.py-->line:88] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于500000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于500000
? ^

2020-08-22 11:37:04,592 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例充值金额非数字，执行未通过
2020-08-22 11:37:04,592 - [test_03recharge_withdraw.py-->line:88] - ERROR: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须为数值型' != '余额必须为数值型'
- 金额必须为数值型
? ^
+ 余额必须为数值型
? ^

2020-08-22 11:37:04,661 - [test_03recharge_withdraw.py-->line:87] - ERROR: 用例充值金额小数点3位，执行未通过
2020-08-22 11:37:04,663 - [test_03recharge_withdraw.py-->line:88] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 79, in test_recharge
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-22 11:37:04,955 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现成功-整数，执行未通过
2020-08-22 11:37:04,956 - [test_03recharge_withdraw.py-->line:156] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 146, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-22 11:37:05,073 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现成功-1位小数，执行未通过
2020-08-22 11:37:05,073 - [test_03recharge_withdraw.py-->line:156] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 146, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-22 11:37:05,191 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现成功-2位小数，执行未通过
2020-08-22 11:37:05,191 - [test_03recharge_withdraw.py-->line:156] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 146, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-22 11:37:05,314 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现成功-50万，执行未通过
2020-08-22 11:37:05,315 - [test_03recharge_withdraw.py-->line:156] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 146, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-22 11:37:05,375 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例会员id为空，执行通过
2020-08-22 11:37:05,436 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例会员id不存在，执行通过
2020-08-22 11:37:05,505 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例会员id为数值，执行未通过
2020-08-22 11:37:05,505 - [test_03recharge_withdraw.py-->line:156] - ERROR: 2 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 146, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002
2020-08-22 11:37:05,558 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例会员id为小数，执行通过
2020-08-22 11:37:05,627 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额为0，执行未通过
2020-08-22 11:37:05,628 - [test_03recharge_withdraw.py-->line:156] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 146, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-22 11:37:05,691 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额为负数，执行未通过
2020-08-22 11:37:05,691 - [test_03recharge_withdraw.py-->line:156] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 147, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-22 11:37:05,762 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额为空，执行未通过
2020-08-22 11:37:05,762 - [test_03recharge_withdraw.py-->line:156] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 147, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-08-22 11:37:05,832 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额-3位小数，执行未通过
2020-08-22 11:37:05,833 - [test_03recharge_withdraw.py-->line:156] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 147, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-22 11:37:05,888 - [test_03recharge_withdraw.py-->line:155] - ERROR: 用例提现金额-大于50万，执行未通过
2020-08-22 11:37:05,889 - [test_03recharge_withdraw.py-->line:156] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_03recharge_withdraw.py", line 147, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-22 11:37:05,957 - [test_03recharge_withdraw.py-->line:159] - INFO: 用例提现金额-非数字，执行通过
2020-08-22 11:37:06,015 - [test_04withdraw.py-->line:78] - INFO: 用例登录成功，执行通过
2020-08-22 11:37:06,134 - [test_04withdraw.py-->line:74] - ERROR: 用例提现成功-整数，执行未通过
2020-08-22 11:37:06,134 - [test_04withdraw.py-->line:75] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-22 11:37:06,246 - [test_04withdraw.py-->line:74] - ERROR: 用例提现成功-1位小数，执行未通过
2020-08-22 11:37:06,247 - [test_04withdraw.py-->line:75] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-22 11:37:06,364 - [test_04withdraw.py-->line:74] - ERROR: 用例提现成功-2位小数，执行未通过
2020-08-22 11:37:06,364 - [test_04withdraw.py-->line:75] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-22 11:37:06,426 - [test_04withdraw.py-->line:74] - ERROR: 用例充值成功-50万，执行未通过
2020-08-22 11:37:06,427 - [test_04withdraw.py-->line:75] - ERROR: 0 != 1003
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1003
2020-08-22 11:37:06,541 - [test_04withdraw.py-->line:74] - ERROR: 用例提现成功-50万，执行未通过
2020-08-22 11:37:06,541 - [test_04withdraw.py-->line:75] - ERROR: 0 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 0 != 1002
2020-08-22 11:37:06,603 - [test_04withdraw.py-->line:78] - INFO: 用例会员id为空，执行通过
2020-08-22 11:37:06,676 - [test_04withdraw.py-->line:78] - INFO: 用例会员id不存在，执行通过
2020-08-22 11:37:06,744 - [test_04withdraw.py-->line:74] - ERROR: 用例会员id为数值，执行未通过
2020-08-22 11:37:06,745 - [test_04withdraw.py-->line:75] - ERROR: 2 != 1002
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 1002
2020-08-22 11:37:06,805 - [test_04withdraw.py-->line:78] - INFO: 用例会员id为小数，执行通过
2020-08-22 11:37:06,878 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额为0，执行未通过
2020-08-22 11:37:06,878 - [test_04withdraw.py-->line:75] - ERROR: 2 != 0
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 66, in test_withdraw
    self.assertEqual(expected["code"], res["code"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 832, in _baseAssertEqual
    raise self.failureException(msg)
AssertionError: 2 != 0
2020-08-22 11:37:06,940 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额为负数，执行未通过
2020-08-22 11:37:06,941 - [test_04withdraw.py-->line:75] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-22 11:37:07,007 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额为空，执行未通过
2020-08-22 11:37:07,008 - [test_04withdraw.py-->line:75] - ERROR: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额为空' != '余额为空'
- 金额为空
? ^
+ 余额为空
? ^

2020-08-22 11:37:07,072 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额-3位小数，执行未通过
2020-08-22 11:37:07,072 - [test_04withdraw.py-->line:75] - ERROR: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额小数超过两位' != '余额小数超过两位'
- 金额小数超过两位
? ^
+ 余额小数超过两位
? ^

2020-08-22 11:37:07,130 - [test_04withdraw.py-->line:74] - ERROR: 用例提现金额-大于50万，执行未通过
2020-08-22 11:37:07,131 - [test_04withdraw.py-->line:75] - ERROR: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +
Traceback (most recent call last):
  File "C:\project\py31_class\py31_23day_project\testcase\test_04withdraw.py", line 67, in test_withdraw
    self.assertEqual(expected["msg"], res["msg"])
  File "C:\python37\lib\unittest\case.py", line 839, in assertEqual
    assertion_func(first, second, msg=msg)
  File "C:\python37\lib\unittest\case.py", line 1220, in assertMultiLineEqual
    self.fail(self._formatMessage(msg, standardMsg))
  File "C:\python37\lib\unittest\case.py", line 680, in fail
    raise self.failureException(msg)
AssertionError: '金额必须大于0并且小于或者等于500000' != '余额必须大于0并且小于或者等于5000000'
- 金额必须大于0并且小于或者等于500000
? ^
+ 余额必须大于0并且小于或者等于5000000
? ^                    +

2020-08-22 11:37:07,185 - [test_04withdraw.py-->line:78] - INFO: 用例提现金额-非数字，执行通过
